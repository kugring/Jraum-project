# 서버 포트 설정
server.port=4000

# 데이터 소스 설정
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/jraum?serverTimezone=UTC&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=ezen
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
# spring.jpa.properties.hibernate.format_sql=true
# spring.jpa.properties.hibernate.use_sql_comments=true
# logging.level.org.hibernate.type.descriptor.sql=trace

# GMail 설정 --> SMTP(Simple Mail Transfer Protocol)는 인터넷에서 이메일을 전송하기 위한 표준 프로토콜
spring.mail.host=smtp.gmail.com
# 포트넘버를 587번 포트를 사용할것이다.
spring.mail.port=587
# 이메일을 받을 gmail계정의 이메일
spring.mail.username=wogur4094@gmail.com
# 로그인 패스워드가 아니라 app의 비밀번호를 얘기하는 것이다.
spring.mail.password=vglz ojpl rsjs bmqb
# 어떤 기능인지는 모르지만 gmail을 스프링부트에서 보낼 수가 있게 된다!
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true



# Kakao OAuth2 설정
spring.security.oauth2.client.registration.kakao.client-id=df0b9dae023bac0e67bca6b81c663d04
spring.security.oauth2.client.registration.kakao.client-secret=kT9BZr0HwHxaA1lGmAtOZ0SK44AsxJye
spring.security.oauth2.client.registration.kakao.redirect-uri={baseUrl}/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.scope=profile_nickname

# Kakao OAuth2 Provider 설정
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id






# Naver OAuth2 설정
spring.security.oauth2.client.registration.naver.client-id=NRWiYcgY9qyLkmUUTDDM
spring.security.oauth2.client.registration.naver.client-secret=inHhMBvUit
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=email

# Naver OAuth2 Provider 설정
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response



# JWT Secret Key
secret-key=ThisStatementIsJwtSecretKeyDonNotUseThisStatement


